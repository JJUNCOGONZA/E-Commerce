name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: List directory structure
        run: ls -al

      - name: Build and Test Product Catalog Service
        run: |
          ls -al product-catalog
          cd product-catalog
          mvn clean install

      - name: Increment version for Product Catalog Service
        id: increment_version_product
        run: |
          cd product-catalog
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF++;print}')
          echo "New version: $NEW_VERSION"
          mvn versions:set -DnewVersion=$NEW_VERSION
          echo "new_version_product=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and push version increment for Product Catalog Service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd product-catalog
          git config --global user.name 'Jeisson Junco'
          git config --global user.email 'jeissonjuncogonzalez@gmail.com'
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
          else
            git add pom.xml
            git commit -m "Increment version to ${{ env.new_version_product }}"
          fi
          git pull origin main --rebase
          git push origin HEAD:main

      - name: Create initial tag if none exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -z "$(git ls-remote --tags origin | grep refs/tags/v)" ]; then
            git tag v0.0.1
            git push origin v0.0.1
          fi

      - name: Generate changelog for Product Catalog Service
        id: generate_changelog_product
        uses: mikepenz/release-changelog-builder-action@v2
        with:
          configuration: .github/changelog-config.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release for Product Catalog Service
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.new_version_product }}
          release_name: Release ${{ env.new_version_product }}
          body: ${{ steps.generate_changelog_product.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Build Docker image
        run: |
          cd product-catalog
          docker build -t jjuncogonza/product-catalog:${{ env.new_version_product }} .
          docker tag jjuncogonza/product-catalog:${{ env.new_version_product }} jjuncogonza/product-catalog:latest

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Debug Docker Login
        run: docker info

      - name: Push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker push jjuncogonza/product-catalog:${{ env.new_version_product }}
          docker push jjuncogonza/product-catalog:latest
